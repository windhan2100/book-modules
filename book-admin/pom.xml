<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.book</groupId>
    <artifactId>book-modules</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>book-admin</artifactId>
  <packaging>war</packaging>
  
    <dependencies>
       <dependency>
		  <groupId>javax.servlet</groupId>
		  <artifactId>javax.servlet-api</artifactId>
		</dependency>
	    <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
      		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		</dependency>
		<dependency>
		    <groupId>commons-lang</groupId>
		    <artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>
		
		<!-- book -->
		<dependency>
			<groupId>com.book</groupId>
			<artifactId>book-service</artifactId>
		</dependency>
		
		<!-- log4j2的测试使用,随后注释掉 -->
		<dependency>
		  <groupId>org.apache.logging.log4j</groupId>
		  <artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.apache.logging.log4j</groupId>
		  <artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.apache.logging.log4j</groupId>
		  <artifactId>log4j-web</artifactId>
		</dependency>
		<!-- log4j2与slf4j集成 -->
		<dependency>
		  <groupId>org.slf4j</groupId>
		  <artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.apache.logging.log4j</groupId>
		  <artifactId>log4j-slf4j-impl</artifactId>
		</dependency>
		
        <!-- jackson -->
        <dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-annotations</artifactId>
		</dependency>
	</dependencies>  
	
	<!-- 插件配置开始 -->
  	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource> 
		</resources>
  	
  		<plugins>
  				<!-- clean插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                </plugin>
                <!-- install插件 -->
                <plugin>
				  <groupId>org.apache.maven.plugins</groupId>
				  <artifactId>maven-install-plugin</artifactId>
                </plugin>
                <!-- release插件 -->
                <plugin>
               	  <groupId>org.apache.maven.plugins</groupId>
				  <artifactId>maven-release-plugin</artifactId>
                </plugin>
                <!-- complier插件，设定JDK版本 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration> 
	                    <source>${jdk.version}</source> 
	                    <target>${jdk.version}</target> 
	                    <encoding>${encoding}</encoding>
               	    </configuration>
                </plugin>
                 <!-- resource插件:解决资源文件的编码问题    -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <configuration>  
                  	  <encoding>${encoding}</encoding>  
               	    </configuration> 
                </plugin>
                <!-- dependency相关插件：处理与依赖相关的插件(拷贝依赖的jar包到lib目录) -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <configuration>
                        <overWriteReleases>true</overWriteReleases>
                        <overWriteSnapshots>true</overWriteSnapshots>
                    </configuration>
                </plugin>
                <!-- jar打包相关插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <!-- 源码自动打包并发布 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                            <inherited>false</inherited>
                        </execution>
                    </executions>
                </plugin>
                <!-- 生成javadoc文件插件 
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <encoding>${encoding}</encoding>
                        <charset>${encoding}</charset>
                        <docencoding>${encoding}</docencoding>
                    </configuration>
                </plugin>-->
               <!-- war打包插件, 设定war包名称不带版本号 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                </plugin>
                <!-- assembly插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <configuration>
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
	            <!-- 此插件用于执行配置文件替换 -->
				<plugin>
					<groupId>com.juvenxu.portable-config-maven-plugin</groupId>
					<artifactId>portable-config-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>replace-package</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

                <!-- jetty插件开始 -->
                <plugin>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-maven-plugin</artifactId>
                    <version>9.4.4.v20170414</version>
                    <configuration>
                        <scanIntervalSeconds>5</scanIntervalSeconds>
                        <webApp>
                            <contextPath>/</contextPath>
                        </webApp>
                    </configuration>
                </plugin>
                <!-- jetty插件结束 -->

  		</plugins>
  	</build>
  	<!-- 插件配置结束 -->
  	
  	<!-- 配置文件 -开始 -->
  	<profiles> 
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<filters>
					<filter>${project.basedir}/build.dev.properties</filter>
				</filters>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<filters>
					<filter>${project.basedir}/build.release.properties</filter>
				</filters>
			</build>
		</profile>
	</profiles>
	<!-- 配置文件 -结束 -->
</project>
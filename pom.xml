<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  	<modelVersion>4.0.0</modelVersion>
  	<groupId>com.book</groupId>
  	<artifactId>book-modules</artifactId>
 	<version>0.0.1-SNAPSHOT</version>
  	<packaging>pom</packaging>
  	
  	<modules>
  		<module>book-service</module>
  		<module>book-admin</module>
  		<module>book-web</module>
  	</modules>
  	
  	<!-- 开发者信息-begin -->
  	<developers>
  		<developer>
  			<id>liweihan</id>
  			<name>liweihan</name>
  			<email>liweihan@sohu-inc.com</email>
  			<organization>sohu</organization>
  			<timezone>+8</timezone>
  			<roles>
  				<role>senior engineer</role>
  			</roles>
  		</developer>
  	</developers>
  	<!-- 开发者信息-end -->
  	
  	<!-- 主要依赖库的版本定义 -begin -->
  	<properties>
  	    <!-- book-version -->
        <book.version>0.0.1-SNAPSHOT</book.version>
  		
  		<!-- Spring -->
  		<spring.version>4.3.4.RELEASE</spring.version>
  		<!-- mybatis- -->
  		<mybatis.version>3.2.8</mybatis.version>
  		<mybatis.spring>1.3.0</mybatis.spring>
  		<!-- mysql -->
  		<mysql.version>5.1.37</mysql.version>
  		<!-- druid -->
  		<druid.version>1.0.24</druid.version>
  		<!-- log4j2 -->
  		<log4j.version>2.8.2</log4j.version>
  		<slf4j.version>1.7.7</slf4j.version>
  		<!-- jackson -->
  		<jackson.version>2.7.4</jackson.version>
  		<!-- protostuff -->
  		<protostuff.version>1.0.8</protostuff.version>
  		<!-- hystrix -->
  		<hystrix.version>1.5.12</hystrix.version>
  		<!-- ehcache -->
  		<ehcache.version>2.10.4</ehcache.version>
  		<ehcache-web.version>2.0.4</ehcache-web.version>
  		<ehcache-core.version>2.6.11</ehcache-core.version>
  		
  		<!-- plugins的属性定义 -->
  		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  		<jdk.version>1.8</jdk.version>
  		<encoding>UTF-8</encoding>
  	</properties>
  	<!-- 主要依赖库的版本定义 -end -->
  	
  	<!-- 私库的地址 begin -->
  	<repositories>
  		<!-- 
		<repository>
			<id>nexus.public</id>
			<url>http://admin.my.hd.sohu.com/nexus/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository> -->
		<!-- 中央库：引入hystrix等-->
	     <repository>
	         <id>nexus.center</id>
	         <name>local private nexus</name>
	         <url>http://search.maven.org</url>
	         <releases>
	             <enabled>true</enabled>
	         </releases>
	         <snapshots>
	             <enabled>false</enabled>
	         </snapshots>
	     </repository>
	     <!-- 中央库：引入hystrix等-->
	</repositories>
  	<!-- 私库的地址 end -->

  	
  	<!-- 预定义依赖项的version,scope与exclusions,子项目中只需定义groupId 和 artifactId 即可 begin 
  		 dependencyManagement:用于父项目配置共同的依赖关系，主要配置依赖包相同因素，如版本，scope
  		-->
  	<dependencyManagement>
  		<dependencies>
  			<!-- druid -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>
			
  			<!-- mysql -->
  			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
  		
  			<!-- mybatis-spring -->
  			<dependency>
			  <groupId>org.mybatis</groupId>
			  <artifactId>mybatis-spring</artifactId>
			  <version>${mybatis.spring}</version>
			</dependency>
			<dependency>
			  <groupId>org.mybatis</groupId>
			  <artifactId>mybatis</artifactId>
			  <version>${mybatis.version}</version>
			</dependency>
  		
  			<!-- book -->
  			<dependency>
  				<groupId>com.book</groupId>
  				<artifactId>book-service</artifactId>
  				<version>${book.version}</version>
  			</dependency>
  			<dependency>
  				<groupId>com.book</groupId>
  				<artifactId>book-util</artifactId>
  				<version>${book.version}</version>
  			</dependency>
  			<!-- servlet -->
	  		<dependency>
			  <groupId>javax.servlet</groupId>
			  <artifactId>javax.servlet-api</artifactId>
			  <version>3.1.0</version>
			</dependency>
			
			<!-- spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>
		    <dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-context-support</artifactId>
	            <version>${spring.version}</version>
       		</dependency>
	        <dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-beans</artifactId>
	            <version>${spring.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-web</artifactId>
	            <version>${spring.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-expression</artifactId>
	            <version>${spring.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-jms</artifactId>
	            <version>${spring.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-core</artifactId>
	            <version>${spring.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-aop</artifactId>
	            <version>${spring.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-context</artifactId>
	            <version>${spring.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-jdbc</artifactId>
	            <version>${spring.version}</version>
	        </dependency>
	        <dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-tx</artifactId>
	            <version>${spring.version}</version>
	        </dependency>
	        <dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
			  <groupId>org.springframework</groupId>
			  <artifactId>spring-webmvc</artifactId>
			  <version>${spring.version}</version>
			</dependency>
			
			<!-- commons -->
			<dependency>
			    <groupId>commons-io</groupId>
			    <artifactId>commons-io</artifactId>
			    <version>2.5</version>
			</dependency>
			<dependency>
			    <groupId>commons-fileupload</groupId>
			    <artifactId>commons-fileupload</artifactId>
			    <version>1.3.3</version>
			</dependency>
			<dependency>
			    <groupId>commons-lang</groupId>
			    <artifactId>commons-lang</artifactId>
			    <version>2.6</version>
			</dependency>
			<dependency>
			    <groupId>commons-codec</groupId>
			    <artifactId>commons-codec</artifactId>
			    <version>1.9</version>
			</dependency>
			
			<!-- log4j2的测试使用,随后注释掉 -->
			<dependency>
			  <groupId>org.apache.logging.log4j</groupId>
			  <artifactId>log4j-api</artifactId>
			  <version>${log4j.version}</version>
			</dependency>
			<dependency>
			  <groupId>org.apache.logging.log4j</groupId>
			  <artifactId>log4j-core</artifactId>
			  <version>${log4j.version}</version>
			</dependency>
			<dependency>
			  <groupId>org.apache.logging.log4j</groupId>
			  <artifactId>log4j-web</artifactId>
			  <version>${log4j.version}</version>
			</dependency>
			<!-- log4j2与slf4j集成 -->
			<dependency>
			  <groupId>org.slf4j</groupId>
			  <artifactId>slf4j-api</artifactId>
			  <version>${slf4j.version}</version>
			</dependency>
			<dependency>
			  <groupId>org.apache.logging.log4j</groupId>
			  <artifactId>log4j-slf4j-impl</artifactId>
			  <version>${log4j.version}</version>
			</dependency>
			
			<!-- fastjson -->
		   <dependency>
	            <groupId>com.alibaba</groupId>
	            <artifactId>fastjson</artifactId>
	            <version>1.2.28</version>
	        </dependency>
	        
	        <!-- jackson -->
	        <dependency>
			    <groupId>com.fasterxml.jackson.core</groupId>
			    <artifactId>jackson-databind</artifactId>
			    <version>${jackson.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.fasterxml.jackson.core</groupId>
			    <artifactId>jackson-core</artifactId>
			    <version>${jackson.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.fasterxml.jackson.core</groupId>
			    <artifactId>jackson-annotations</artifactId>
			    <version>${jackson.version}</version>
			</dependency>
			
			<!-- protostuff -->
			<dependency>
			  <groupId>com.dyuproject.protostuff</groupId>
			  <artifactId>protostuff-core</artifactId>
			  <version>${protostuff.version}</version>
			</dependency>
			<dependency>
			  <groupId>com.dyuproject.protostuff</groupId>
			  <artifactId>protostuff-runtime</artifactId>
			  <version>${protostuff.version}</version>
			</dependency>
			<dependency>
			  <groupId>com.dyuproject.protostuff</groupId>
			  <artifactId>protostuff-api</artifactId>
			  <version>${protostuff.version}</version>
			</dependency>
			<dependency>
			  <groupId>com.dyuproject.protostuff</groupId>
			  <artifactId>protostuff-collectionschema</artifactId>
			  <version>${protostuff.version}</version>
			</dependency>
			
			<!-- hystrix -->
			<dependency>
			    <groupId>com.netflix.hystrix</groupId>
			    <artifactId>hystrix-core</artifactId>
			    <version>${hystrix.version}</version>
			</dependency>
			<!-- ehcache -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
			    <artifactId>ehcache</artifactId>
			    <version>${ehcache.version}</version>
			</dependency>
			<dependency>
			    <groupId>net.sf.ehcache</groupId>
			    <artifactId>ehcache-core</artifactId>
			    <version>${ehcache-core.version}</version>
			</dependency>
			<dependency>
			    <groupId>net.sf.ehcache</groupId>
			    <artifactId>ehcache-web</artifactId>
			    <version>${ehcache-web.version}</version>
			</dependency>

  		</dependencies>
  	</dependencyManagement>
  	<!-- 预定义依赖项的version,scope与exclusions,子项目中只需定义groupId 和 artifactId 即可 end -->
  	
  	<!-- 插件配置开始 -->
  	<build>
  		<pluginManagement>
  			<plugins>
  				<!-- clean插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.6.1</version>
                </plugin>
                <!-- install插件 -->
                <plugin>
				  <groupId>org.apache.maven.plugins</groupId>
				  <artifactId>maven-install-plugin</artifactId>
				  <version>2.5.2</version>
                </plugin>
                <!-- release插件 -->
                <plugin>
               	  <groupId>org.apache.maven.plugins</groupId>
				  <artifactId>maven-release-plugin</artifactId>
				  <version>2.5.1</version>
                </plugin>
                <!-- complier插件，设定JDK版本:设置源文件编码方式 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.2</version> 
                    <configuration> 
	                    <source>${jdk.version}</source> 
	                    <target>${jdk.version}</target> 
	                    <encoding>${encoding}</encoding>
               	    </configuration>
                </plugin>
                 <!-- resource插件:解决资源文件的编码问题    -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                    <configuration>  
                  	  <encoding>${encoding}</encoding>  
               	    </configuration> 
                </plugin>
                <!-- dependency相关插件：处理与依赖相关的插件(拷贝依赖的jar包到lib目录) -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.9</version>
                    <configuration>
                        <overWriteReleases>true</overWriteReleases>
                        <overWriteSnapshots>true</overWriteSnapshots>
                    </configuration>
                </plugin>
                <!-- jar打包相关插件:配置manifest文件，加入lib包的jar依赖 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <!-- 源码自动打包并发布:打包source文件为jar文件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.1.2</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                            <inherited>false</inherited>
                        </execution>
                    </executions>
                </plugin>
                <!-- 生成javadoc文件插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9.1</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <encoding>${encoding}</encoding>
                        <charset>${encoding}</charset>
                        <docencoding>${encoding}</docencoding>
                    </configuration>
                </plugin>
               <!-- war打包插件, 设定war包名称不带版本号 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <!-- assembly插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                     <version>2.5.3</version>
                    <configuration>
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
	            <!-- 此插件用于执行配置文件替换:是Maven针对不同环境打包使用的 -->
				<plugin>
					<groupId>com.juvenxu.portable-config-maven-plugin</groupId>
					<artifactId>portable-config-maven-plugin</artifactId>
					<version>1.1.5</version>
					<executions>
						<execution>
							<goals>
								<goal>replace-package</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
  			</plugins>
  		</pluginManagement>
  	</build>
  	<!-- 插件配置结束 -->
  	
   <profiles> 
        <profile>
            <id>dev</id> 
        </profile>
        <profile>
            <id>release</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation> 
        </profile>
    </profiles> 
</project>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.book</groupId>
    <artifactId>book-modules</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>book-service</artifactId>
  
    <properties>
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
  
  <dependencies>
  	    <dependency>
		  <groupId>javax.servlet</groupId>
		  <artifactId>javax.servlet-api</artifactId>
		  <!-- <version>3.1.0</version> 此处不需要设置版本号，因为在book-modules/pom.xml中已经确定了！-->
		</dependency>
  
  		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		
		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
		</dependency>
		
	  	<!-- druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
		</dependency>
		
		<!-- mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		
		<!-- log4j2的测试使用,随后注释掉 -->
		<dependency>
		  <groupId>org.apache.logging.log4j</groupId>
		  <artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.apache.logging.log4j</groupId>
		  <artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.apache.logging.log4j</groupId>
		  <artifactId>log4j-web</artifactId>
		</dependency>
		<!-- log4j2与slf4j集成 -->
		<dependency>
		  <groupId>org.slf4j</groupId>
		  <artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.apache.logging.log4j</groupId>
		  <artifactId>log4j-slf4j-impl</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>commons-codec</groupId>
		    <artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
		    <groupId>commons-lang</groupId>
		    <artifactId>commons-lang</artifactId>
		</dependency>
		
		<!-- protostuff -->
		<dependency>
		  <groupId>com.dyuproject.protostuff</groupId>
		  <artifactId>protostuff-core</artifactId>
		</dependency>
		<dependency>
		  <groupId>com.dyuproject.protostuff</groupId>
		  <artifactId>protostuff-runtime</artifactId>
		</dependency>
		<dependency>
		  <groupId>com.dyuproject.protostuff</groupId>
		  <artifactId>protostuff-api</artifactId>
		</dependency>
		<dependency>
		  <groupId>com.dyuproject.protostuff</groupId>
		  <artifactId>protostuff-collectionschema</artifactId>
		</dependency>
  </dependencies>
  
  	<!-- 插件配置开始 -->
  	<build>
  		<plugins>
  				<!-- clean插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                </plugin>
                <!-- install插件 -->
                <plugin>
				  <groupId>org.apache.maven.plugins</groupId>
				  <artifactId>maven-install-plugin</artifactId>
                </plugin>
                <!-- release插件 -->
                <plugin>
               	  <groupId>org.apache.maven.plugins</groupId>
				  <artifactId>maven-release-plugin</artifactId>
                </plugin>
                <!-- complier插件，设定JDK版本 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration> 
	                    <source>${jdk.version}</source> 
	                    <target>${jdk.version}</target> 
	                    <encoding>${encoding}</encoding>
               	    </configuration>
                </plugin>
                 <!-- resource插件:解决资源文件的编码问题    -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <configuration>  
                  	  <encoding>${encoding}</encoding>  
               	    </configuration> 
                </plugin>
                <!-- dependency相关插件：处理与依赖相关的插件(拷贝依赖的jar包到lib目录) -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <configuration>
                        <overWriteReleases>true</overWriteReleases>
                        <overWriteSnapshots>true</overWriteSnapshots>
                    </configuration>
                </plugin>
                <!-- jar打包相关插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <!-- 源码自动打包并发布 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                            <inherited>false</inherited>
                        </execution>
                    </executions>
                </plugin>
                <!-- 生成javadoc文件插件 
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <encoding>${encoding}</encoding>
                        <charset>${encoding}</charset>
                        <docencoding>${encoding}</docencoding>
                    </configuration>
                </plugin>-->
               <!-- war打包插件, 设定war包名称不带版本号 
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                </plugin>-->
                <!-- assembly插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <configuration>
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
  		</plugins>
  	</build>
  	<!-- 插件配置结束 -->
</project>